version: "3.9"
services:

  redis:
    image: redis
    container_name: redis-svc-kotlin-playground
    ports:
      - "6379:6379"

  mongodb:
    image: mongo
    restart: always
    environment:
      MONGODB_ROOT_USER: root
      MONGODB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  postgres:
    image: postgres
    container_name: postgres-svc-kotlin-playground
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: pokemon
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
    ports:
      - "15432:5432"

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse-alpine-svc-kotlin-playground
    volumes:
      - ./docker/clickhouse/logs:/var/log/clickhouse-server/
    ports:
      - "18123:8123"

  kafka:
    image: apache/kafka:latest
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3